{"meta":{"title":"蒋冲","subtitle":null,"description":null,"author":"Zi Yi","url":"http://yoursite.com"},"pages":[{"title":"About","date":"2018-03-25T14:02:47.423Z","updated":"2018-03-25T14:02:47.423Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2018-03-25T14:02:47.424Z","updated":"2018-03-25T14:02:47.424Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2018-03-25T14:02:47.425Z","updated":"2018-03-25T14:02:47.425Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"vue子父组件属性之间的操作","slug":"父组件改变子组件属性","date":"2018-04-01T16:00:00.000Z","updated":"2018-04-07T15:35:50.075Z","comments":true,"path":"2018/04/02/父组件改变子组件属性/","link":"","permalink":"http://yoursite.com/2018/04/02/父组件改变子组件属性/","excerpt":"属性改变 父组件事件触发改变子组件属性值 在Vue中，父子组件的关系可以总结为 prop 向下传递，事件向上传递。父组件通过 prop 给子组件下发数据，子组件通过事件给父组件发送消息。 父组件创建一个改变事件","text":"属性改变 父组件事件触发改变子组件属性值 在Vue中，父子组件的关系可以总结为 prop 向下传递，事件向上传递。父组件通过 prop 给子组件下发数据，子组件通过事件给父组件发送消息。 父组件创建一个改变事件 1234567891011121314151617//data export default &#123; data() &#123; return &#123; msg: '信息', isCurr: &#123; a:1, b:2 &#125;, methods:&#123; butFun:function()&#123; this.isCurr.a = 2; &#125; &#125; &#125; &#125; &#125; 123&lt;div class='componmentBox'&gt; &lt;information v-bind:defined='isCurr'&gt;&lt;/information&gt;&lt;/div&gt; 这里的defined是自己定义的名字，添加在子组件props里面，需要注意是：如果是驼峰名，例如：nameShow，props里面是：props:[&quot;nameShow&quot;]，父组件要添加属性是v-bind:name-show=&quot;&quot;;要添加“-”。 子组件如何获取改变的事件 12345678910111213//子组件添加： export default &#123; data() &#123; return &#123; props:[\"defined\"], watch:&#123; defined:function(val)&#123; //这里面的val就是defined的key值 &#125; &#125; &#125; &#125;&#125; 子组件改变父组件的值 子组件educationdate 1this.$emit(\"backChangeFalse\"); 需要在什么时候改变父组件属性时，调用this.$emit() 父组件 要在父组件调用组件的元素上添加一个事件方法：v-on:子级自定义=&quot;&quot; 根据父组件的方法来改变父组件上的属性 123&lt;div class='componmentBox' &gt; &lt;educationdate v-on:backChangeFalse='backChangeFalse'&gt;&lt;/educationdate&gt;&lt;/div&gt; 123456789101112export default &#123; data() &#123; return &#123; back:true; methods:&#123; backChangeFalse:function()&#123; this.back = false; &#125; &#125; &#125; &#125;&#125;","categories":[{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/tags/Vue/"}]},{"title":"三栏布局","slug":"七种三栏布局","date":"2018-03-24T14:13:35.000Z","updated":"2018-04-02T16:05:56.664Z","comments":true,"path":"2018/03/24/七种三栏布局/","link":"","permalink":"http://yoursite.com/2018/03/24/七种三栏布局/","excerpt":"三栏布局1. 流体布局","text":"三栏布局1. 流体布局 1234567891011121314151617181920212223242526272829303132&lt;!DOCTYPE html&gt;&lt;html lang='en'&gt;&lt;head&gt; &lt;style&gt; .left&#123; float:left; width:100px; height:200PX; background-color:red; &#125; .right&#123; float:rigth; width:200px; height:200px; background-color:blue; &#125; .main&#123; margin-right:120px; margin-left:220px; height:200px; background-color:green; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class='container'&gt; &lt;div class=\"left\"&gt;&lt;/div&gt; &lt;div class=\"right\"&gt;&lt;/div&gt; &lt;div class=\"main\"&gt;&lt;div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 2. BFC 三栏布局BFC规则 有这样的描述：BFC区域，不会与浮动元素重叠，利用这一点实现。 Block formatting context (BFC)块级格式化上下文,bfc三栏布局的主体部分会后加载 12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang = \"en\"&gt;&lt;head&gt; &lt;style&gt; .left&#123; float:left; width:100px; height:200px; margin-right:20px; background-color:red; &#125; .right&#123; float:right; width:200px; height:200px; margin-left:20px; background-color:blue; &#125; .main&#123; height:200px; overflow:hidden; background-color:green; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=\"container\"&gt; &lt;div class=\"left\"&gt;&lt;/div&gt; &lt;div class=\"right\"&gt;&lt;/div&gt; &lt;div class=\"main\"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 缺点跟方法一类似，主要内容模块无法最先加载，当页面中内容较多时会影响用户体验。因此为了解决这个问题，有了下面要介绍的布局方案双飞翼布局。 3. 双飞翼布局1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;style&gt; .content&#123; float:left; width:100%; &#125; .main&#123; height:200px; margin-left:110px; margin-right:220px; background-color:green; &#125; //清除浮动 .main::after&#123; display:block; content:\"\"; clear:both; font-size:0; height:0; zoom:1; &#125; .left&#123; float:left; height:200px; width:100px; margin-left:-100%; background-color:red; &#125; .right&#123; width:200px; height:200px; float:right; margin-left:-200px; background-color:blue; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=\"content\"&gt; &lt;div class=\"main\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"left\"&gt;&lt;/div&gt; &lt;div class=\"right\"&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 利用的是浮动元素 margin 负值的应用，感兴趣的同学可以上网搜搜原理。 主体内容可以优先加载，HTML 代码结构稍微复杂点。 4. 圣杯布局跟双飞翼布局很像，有一些细节上的区别，相对于双飞翼布局来说，HTML 结构相对简单，但是样式定义就稍微复杂，也是优先加载内容主体。123456789101112131415161718192021222324252627282930313233343536373839404142&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;style&gt; .container &#123; margin-left: 120px; margin-right: 220px; &#125; .main &#123; float: left; width: 100%; height: 300px; background-color: red; &#125; .left &#123; float: left; width: 100px; height: 300px; margin-left: -100%; position: relative; left: -120px; background-color: blue; &#125; .right &#123; float: left; width: 200px; height: 300px; margin-left: -200px; position: relative; right: -220px; background-color: green; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=\"container\"&gt; &lt;div class=\"main\"&gt;&lt;/div&gt; &lt;div class=\"left\"&gt;&lt;/div&gt; &lt;div class=\"right\"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 5.Flex 布局flex属性； 主体设置flex-grow:1;占的份数，加上order:-1值越小越靠前排 简单实用，未来的趋势，需要考虑浏览器的兼容性。1234567891011121314151617181920212223242526272829303132333435&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;style&gt; .container &#123; display: flex; &#125; .main &#123; flex-grow: 1; height: 300px; background-color: red; &#125; .left &#123; order: -1; flex: 0 1 200px; margin-right: 20px; height: 300px; background-color: blue; &#125; .right &#123; flex: 0 1 100px; margin-left: 20px; height: 300px; background-color: green; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=\"container\"&gt; &lt;div class=\"main\"&gt;&lt;/div&gt; &lt;div class=\"left\"&gt;&lt;/div&gt; &lt;div class=\"right\"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 6. Table 布局父级设置display:table属性，内部元素设置display:table-cell，按照位置从左到右排列。 缺点：无法设置栏间距12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;style&gt; .container &#123; display: table; width: 100%; &#125; .left, .main, .right &#123; display: table-cell; &#125; .left &#123; width: 200px; height: 300px; background-color: red; &#125; .main &#123; background-color: blue; &#125; .right &#123; width: 100px; height: 300px; background-color: green; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=\"container\"&gt; &lt;div class=\"left\"&gt;&lt;/div&gt; &lt;div class=\"main\"&gt;&lt;/div&gt; &lt;div class=\"right\"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 绝对定位三栏布局采用了父级绝对定位，主题内容给个左右固定值得margin，左右采用相对定位，给固定宽度。 特点：简单实用，并且主要内容可以优先加载。123456789101112131415161718192021222324252627282930313233343536373839&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;style&gt; .container &#123; position: relative; &#125; .main &#123; height: 400px; margin: 0 120px; background-color: green; &#125; .left &#123; position: absolute; width: 100px; height: 300px; left: 0; top: 0; background-color: red; &#125; .right &#123; position: absolute; width: 100px; height: 300px; background-color: blue; right: 0; top: 0; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=\"container\"&gt; &lt;div class=\"main\"&gt;&lt;/div&gt; &lt;div class=\"left\"&gt;&lt;/div&gt; &lt;div class=\"right\"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"source","slug":"source","permalink":"http://yoursite.com/categories/source/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://yoursite.com/tags/CSS/"}]},{"title":"新页面","slug":"新页面","date":"2018-03-24T13:13:35.000Z","updated":"2018-03-24T13:46:13.542Z","comments":true,"path":"2018/03/24/新页面/","link":"","permalink":"http://yoursite.com/2018/03/24/新页面/","excerpt":"","text":"文章1var html = document.getElementById(\"#wrap\") 第二篇","categories":[],"tags":[{"name":"js","slug":"js","permalink":"http://yoursite.com/tags/js/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-03-23T14:05:18.193Z","updated":"2018-03-23T14:05:18.193Z","comments":true,"path":"2018/03/23/hello-world/","link":"","permalink":"http://yoursite.com/2018/03/23/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}